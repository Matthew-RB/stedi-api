# 2021 Matthew Brunson
#this is the version of YAML we are using with the Kubernetes API
apiVersion: apps/v1
# the kind is the type of Kubernetes resource we are using
# A deployment is when we run code on a server
kind: Deployment
# Metadata is information related to the object we created in Kubernetes
metadata:
# the name here is the name of our deployment
  name: stedi-matthew-b
spec:
# Replicas refers to the number of pods we deploy
  replicas: 1
# A selector is a route to my pod
  selector:
# matchLabels are a label for my selector
    matchLabels:
# App is a specific kind of label for my pod
      app: stedi-matthew-b
# The Template describes all the features of my pod
  template:
# metadata provides labels for my template
    metadata:
      labels:
        app: stedi-matthew-b
# the spec refers to the specification of my containers in my pod
    spec:
# containers can have one or more Docker containers in the pod
      containers:
# the name of the container is specified below
        - name: stedi-matthew-b
# the image is a prebuilt file containing the operating system
          image: gcr.io/group-project-262/stedi-matthew-b
#The ports is a list of tcp ports the pod listens on
          ports: 
# The container port is a specific port the pod listens to
           - containerPort: 80
#Resources are the compute resources used by the pod in the cloud
          resources:
# Limits represent the max amount of cpu and memory allowed for the pod
            limits:
# CPU is the max amount of CPU that can be used by the port
              cpu: ".125"
# Memory is the max amount of memory that can be used by the port
              memory: "500Mi"
# Requests is the minimum amount of compute resources used by the port
            requests:
# CPU is the minimum amount of CPU the pod needs to run
              cpu: ".125"
# Memory is the minimum amount of Memory the pod needs to run
              memory: "250Mi"
# Liveness Probe is a configuration that checks the pod for health
          livenessProbe:
# HttpGet instructs kubernetes to do an HTTP request to check health
            httpGet:
# path defines the url to use when doing HTTP request
              path: /
# port defines the port to use when doing the HTTP request
              port: 4567
# initialDelaySeconds tells Kubernetes to wait before doing a request
            initialDelaySeconds: 3
# PerioudSeconds tells Kubernetes how often to check health
            periodSeconds: 3
---
# apiVersion tells kubernetes whch version of yaml to use
apiVersion: v1
# kind tells kebernetes what kind of object to create
kind: Service
# metadata contains attributes about the object
metadata: 
# name is the name of the object we are creating
  name: stedi-matthew-b-loadbalancer
# spec is the specification for the object (or the loadbalancer)
spec:
# selector tells the network layer how to find the right pod
  selector:
# app tells the selector which app to send the traffic to
    app: stedi-matthew-b 
# type tells kubernetes the type of service we want
# a loadbalancer distributes network packets to one or more pods
  type: LoadBalancer
# ports are a list of ports the Load Balancer listens on
  ports:
# port is the port we want to listen on the network
    - port: 80
# targetport is the port the pod listens on inside kubernetes
      targetPort: 4567
  
